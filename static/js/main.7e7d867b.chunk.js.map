{"version":3,"sources":["additionalFunctions/createAjvObject.tsx","additionalFunctions/displayError.tsx","additionalFunctions/linksToActions.tsx","additionalFunctions/normalization.tsx","diagrams/CanvasWidget.tsx","diagrams/WorkspaceWidget.tsx","diagrams/selfLink.tsx","diagrams/createDiagrams.tsx","additionalFunctions/diagramFunctions/helperPortCreation.tsx","diagrams/createDiagramFunctions/addPortsToJobNode.tsx","diagrams/createDiagramFunctions/specificPorts.tsx","diagrams/createDiagramFunctions/createLinksBetweenJobs.tsx","diagrams/matrixHandling.tsx","components/Editor.tsx","components/App.tsx","hooks/useLocalStorage.tsx","additionalFunctions/neededFor.tsx","additionalFunctions/allNeededJobs.ts","index.tsx"],"names":["ajv","Ajv","allErrors","strict","displayError","result","len","length","message","instancePath","LinksToActions","normalized","tableOfUses","properties","jobs","helper","item","steps","push","uses","destructuredTable","re","RegExp","distTable","Array","from","Set","inside","split","links","map","x","y","className","href","target","rel","objResult","normalizeJob","job","input","strategy","matrix","normalizeMatrix","isArray","filter","needs","matrixValues","Object","keys","matrixKey","inputs","inputKey","newResult","inputValue","r","cartesianProduct","Container","styled","div","p","background","color","Expand","css","DemoCanvasWidget","styles","this","props","children","React","Toolbar","Content","DemoButton","button","DemoWorkspaceWidget","buttons","selfLink","obj","values","includes","allNeeds","norm","undefined","jobsInNormalized","checkCycles","graph2","assign","queue","node","batch","path","parents","sameNeeds","helperArray","valueArr","elementOfValueArr","v","DemoWidget","engine","timeoutId","autoDistribute","redistribute","model","reroute","repaintCanvas","zoomToFit","changeOrientation","options","graph","rankdir","DagreEngine","align","ranker","marginx","marginy","includeLinks","clearTimeout","getLinkFactories","getFactory","PathFindingLinkFactory","NAME","calculateRoutingMatrix","onClick","Component","colors","firstNode","jobsWithoutNeeds","doubleNeeds","cycle","createFirstNodes","notNormalized","port1","node1","DefaultNodeModel","name","String","normal","ttt","tt","preventDuplicate","port","addOutPort","i","j","helperPortCreation","createDiagrams","isNeededFor","node2","key","portsOut","numWithoutNeeds","port2","addInPort","addPortsToJobNode","withoutNeeds","toString","link","portsOutWithNeeds","portsIn","jobName","nodeNumber","keysJobs","if","preventOutput","step","prop","specificPorts","DiagramModel","addAll","linksWithoutNeeds","nod","linksBetweenJobs","needsOfJob","element","link1","link2","portsOut2","label","createLinksBetweenJobs","setLocked","lockLinks","cycledJobs","setColor","cycledKey","colorCycles","createEngine","setModel","Math","random","matrixHandler","matrixes","combinations","combination","entry","entries","por","Editor","value","onChange","window","jsyaml","onBeforeChange","editor","data","linewrapping","lint","mode","placeholder","indentWithTabs","smartIndent","tabSize","scrollbarStyle","lintGutter","foldGutter","gutters","theme","lineNumbers","extraKeys","App","workflow","normalizedObject","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","yaml","setYaml","click","setClick","text","doc","load","e","reason","mark","line","parseYamltoJSON","on","reduce","o","z","jId","normalize","storeValidationResult","validate","compile","schema","valid","errors","dependencyObject","allNeedsFromJobs","allJobsNeeds","renderedDiagram","setRenderedDiagram","timerId","setTimeout","createDiagram","isError","trigger","position","press","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e7d867b.chunk.js","sourcesContent":["import Ajv from 'ajv';\nexport const ajv = new Ajv({\n  allErrors: true,\n  strict: false,\n});\n","export default function displayError(\n  result: boolean | Record<string, any>,\n): string {\n  if (typeof result === 'boolean') {\n    return '';\n  }\n  const len = result.length - 1;\n  return `${result[len].message}` + ` on path: ${result[len].instancePath}`;\n}\n","import React from 'react';\n\nimport { Workflow } from '../schema/Schema';\n\nexport function LinksToActions(normalized: Workflow) {\n  const tableOfUses: string[] = [];\n  // eslint-disable-next-line guard-for-in\n  for (const properties in normalized.jobs) {\n    let helper: any = {};\n    helper = normalized.jobs[properties];\n    for (let item = 0; item < helper.steps.length; ++item) {\n      if ('uses' in helper.steps[item]) {\n        tableOfUses.push(helper.steps[item].uses);\n      }\n    }\n  }\n  const destructuredTable: string[][] = [];\n  const re = new RegExp('@|/');\n  const distTable = Array.from(new Set(tableOfUses));\n  for (let inside = 0; inside < distTable.length; ++inside) {\n    destructuredTable.push(distTable[inside].split(re));\n  }\n  const links = destructuredTable.map((x, y) => {\n    return (\n      <li key={y}>\n        <a\n          className=\"text\"\n          href={`https://github.com/${x[0]}/${x[1]}/releases/tag/${x[2]}`}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          {distTable[y]}\n        </a>\n      </li>\n    );\n  });\n  return <ul>{links}</ul>;\n}\n","import {\n  Workflow,\n  Job,\n  StrategyMatrix,\n  MatrixValue,\n  Event,\n} from '../schema/Schema';\n\ninterface keyable {\n  [key: string]: any;\n}\n\ninterface arrKeyable {\n  [key: string]: any[];\n}\n\nfunction toArray(input: string | string[]): string[] {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return [input];\n}\n\nconst objResult: Record<string, any> = {};\n\nexport function normalize(workflow: Workflow): keyable {\n  if (typeof workflow.on === 'object' && !Array.isArray(workflow.on)) {\n    objResult.on = workflow.on;\n  } else if (typeof workflow.on === 'string') {\n    workflow.on = {\n      [workflow.on]: {},\n    };\n    objResult.on = workflow.on;\n  } else if (Array.isArray(workflow.on)) {\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    objResult.on = workflow.on.reduce<Partial<Record<Event, {}>>>((o, z) => {\n      o[z] = {};\n      return o;\n    }, {});\n  }\n  if (!workflow.jobs) {\n    workflow.jobs = {};\n  }\n  objResult.jobs = {};\n  for (const jId of Object.keys(workflow.jobs).filter(x => x !== 'key')) {\n    objResult.jobs[jId] = workflow.jobs[jId];\n    normalizeJob(objResult.jobs[jId]);\n  }\n  return objResult;\n}\nfunction normalizeJob(job: Job) {\n  // Strategy\n  if (job.strategy?.matrix) {\n    normalizeMatrix(job.strategy.matrix);\n  }\n  // Steps\n  if (!Array.isArray(job.steps)) {\n    job.steps = [];\n  }\n  job.steps = job.steps.filter(x => typeof x === 'object');\n  // Needs ## if not array -> toArray ##\n  job.needs = job.needs && toArray(job.needs);\n  // timeout ## if not set -> set to 60 minutes ##\n  job['timeout-minutes'] = job['timeout-minutes'] || 60;\n}\nexport function normalizeMatrix(\n  matrix: arrKeyable | StrategyMatrix,\n): any[] | string {\n  if (typeof matrix === 'string') {\n    return matrix;\n  }\n  const matrixKeys = Object.keys(matrix);\n  // inputKey - string, value can be string, number or bool\n  const matrixValues: {\n    [inputKey: string]: (string | number | boolean)[] | MatrixValue;\n  } = {};\n  for (const matrixKey of matrixKeys) {\n    // Assigning values of matrix passed to function to previously created empty object with properly assigned types\n    matrixValues[matrixKey] = matrix[matrixKey];\n  }\n  //        ### crossing i.e. every os with every browser ###\n  const inv = cartesianProduct(matrixValues);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return inv;\n}\nfunction cartesianProduct(inputs: keyable) {\n  let result = [];\n  for (const inputKey of Object.keys(inputs)) {\n    if (result.length === 0) {\n      result.push(\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        ...inputs[inputKey].map((x: keyable) => ({\n          [inputKey]: x,\n        })),\n      );\n    } else {\n      const newResult: arrKeyable[] = [];\n      if (inputs[inputKey]) {\n        for (const inputValue of inputs[inputKey]) {\n          for (const r of result) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            newResult.push({ ...r, [inputKey]: inputValue });\n          }\n        }\n      }\n\n      result = newResult;\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return result;\n}\n","import { css, Global } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport * as React from 'react';\n\ninterface DemoCanvasWidgetProps {\n  color?: string;\n  background?: string;\n}\n\nconst Container = styled.div<{ color: string; background: string }>`\n  height: 100%;\n  background-color: ${p => p.background};\n  background-size: 50px 50px;\n  display: flex;\n  > * {\n    height: 100%;\n    min-height: 100%;\n    width: 100%;\n  }\n  background-image: linear-gradient(\n      0deg,\n      transparent 24%,\n      ${p => p.color} 25%,\n      ${p => p.color} 26%,\n      transparent 27%,\n      transparent 74%,\n      ${p => p.color} 75%,\n      ${p => p.color} 76%,\n      transparent 77%,\n      transparent\n    ),\n    linear-gradient(\n      90deg,\n      transparent 24%,\n      ${p => p.color} 25%,\n      ${p => p.color} 26%,\n      transparent 27%,\n      transparent 74%,\n      ${p => p.color} 75%,\n      ${p => p.color} 76%,\n      transparent 77%,\n      transparent\n    );\n`;\n\nconst Expand = css`\n  html,\n  body,\n  #root {\n    height: 100%;\n  }\n`;\n\nexport class DemoCanvasWidget extends React.Component<DemoCanvasWidgetProps> {\n  render() {\n    return (\n      <>\n        <Global styles={Expand} />\n        <Container\n          background={this.props.background || 'rgb(60, 60, 60)'}\n          color={this.props.color || 'rgba(255,255,255, 0.05)'}\n        >\n          {this.props.children}\n        </Container>\n      </>\n    );\n  }\n}\n","import styled from '@emotion/styled';\nimport * as React from 'react';\n\nexport interface DemoWorkspaceWidgetProps {\n  buttons?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >[];\n}\nexport const Toolbar = styled.div`\n  padding: 5px;\n  display: flex;\n  flex-shrink: 0;\n`;\n\nexport const Content = styled.div`\n  flex-grow: 1;\n  height: 100%;\n`;\n\nexport const Container = styled.div`\n  background: none;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const DemoButton = styled.button`\n  background: rgb(60, 60, 60);\n  font-size: 14px;\n  padding: 5px 10px;\n  border: none;\n  color: white;\n  outline: none;\n  cursor: pointer;\n  margin: 2px;\n  border-radius: 3px;\n  &:hover {\n    background: rgb(0, 192, 255);\n  }\n`;\n\nexport class DemoWorkspaceWidget extends React.Component<DemoWorkspaceWidgetProps> {\n  render() {\n    return (\n      <>\n        <Container>\n          <Toolbar>{this.props.buttons}</Toolbar>\n          <Content>{this.props.children}</Content>\n        </Container>\n      </>\n    );\n  }\n}\n","export function selfLink(obj: Record<string, string[]>): boolean {\n  for (let job = 0; job < Object.keys(obj).length; job++) {\n    if (Object.values(obj)[job].includes(Object.keys(obj)[job])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function allNeeds(obj: Record<string, string[]>, norm: any): boolean {\n  if (norm !== undefined && Object.keys(obj).length !== 0) {\n    const jobsInNormalized = Object.keys(norm.jobs);\n    for (let job = 0; job < jobsInNormalized.length; job++) {\n      if (norm['jobs'][jobsInNormalized[job]].needs === undefined) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function checkCycles(obj: Record<string, string[]>) {\n  const graph2: Record<string, string[]> = Object.assign({}, obj);\n  let queue: string[][] = Object.keys(graph2).map(node => [node]);\n  while (queue.length) {\n    const batch: string[][] = [];\n    for (const path of queue) {\n      const parents = graph2[path[0]] || [];\n      for (const node of parents) {\n        if (node === path[path.length - 1]) {\n          batch.push([node, ...path]);\n          return [true, batch[batch.length - 1]];\n        }\n        batch.push([node, ...path]);\n      }\n    }\n    queue = batch;\n  }\n  return [false, []];\n}\nexport function sameNeeds(obj: Record<string, string[]>) {\n  const helperArray: string[][] = Object.values(obj);\n  for (let valueArr = 0; valueArr < helperArray.length; valueArr++) {\n    for (\n      let elementOfValueArr = 0;\n      elementOfValueArr < helperArray[valueArr].length;\n      elementOfValueArr++\n    ) {\n      const result: number = helperArray[valueArr].filter(\n        (v: any) => v === Object.keys(obj)[elementOfValueArr],\n      ).length;\n      if (result > 1) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n","/* eslint-disable guard-for-in */\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport createEngine, {\n  DefaultLinkModel,\n  DefaultNodeModel,\n  DiagramModel,\n  DiagramEngine,\n  DagreEngine,\n  DefaultPortModel,\n  PathFindingLinkFactory,\n} from '@projectstorm/react-diagrams';\nimport React from 'react';\n\nimport { helperPortCreation } from '../additionalFunctions/diagramFunctions/helperPortCreation';\nimport { DemoCanvasWidget } from '../diagrams/CanvasWidget';\nimport { DemoButton, DemoWorkspaceWidget } from '../diagrams/WorkspaceWidget';\nimport { checkCycles } from '../diagrams/selfLink';\nimport { addPortsToJobNode } from './createDiagramFunctions/addPortsToJobNode';\nimport { createLinksBetweenJobs } from './createDiagramFunctions/createLinksBetweenJobs';\nimport { specificPorts } from './createDiagramFunctions/specificPorts';\ntype timeout = any;\ntype props = any;\nclass DemoWidget extends React.Component<\n  { model: DiagramModel; engine: DiagramEngine },\n  any\n> {\n  // eslint-disable-next-line react/sort-comp\n  engine: DagreEngine;\n  timeoutId?: timeout;\n  constructor(props: props) {\n    super(props);\n    this.engine = new DagreEngine({\n      graph: {\n        rankdir: `LR`,\n        align: 'DR',\n        ranker: 'tight-tree',\n        marginx: 10,\n        marginy: 10,\n      },\n      includeLinks: false,\n    });\n  }\n  autoDistribute = () => {\n    this.engine.redistribute(this.props.model);\n    this.reroute();\n    this.props.engine.repaintCanvas();\n    this.props.engine.zoomToFit();\n  };\n\n  componentDidMount(): void {\n    this.autoDistribute();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeoutId);\n  }\n  changeOrientation = () => {\n    if (this.engine.options.graph.rankdir === 'TB') {\n      this.engine.options.graph.rankdir = 'LR';\n    } else if (this.engine.options.graph.rankdir === 'LR') {\n      this.engine.options.graph.rankdir = 'TB';\n    }\n    this.autoDistribute();\n  };\n\n  reroute() {\n    this.props.engine\n      .getLinkFactories()\n      .getFactory<PathFindingLinkFactory>(PathFindingLinkFactory.NAME)\n      .calculateRoutingMatrix();\n  }\n\n  render() {\n    return (\n      <DemoWorkspaceWidget\n        buttons={[\n          <DemoButton\n            key={0}\n            onClick={this.autoDistribute}\n            className=\"resultButton1\"\n          >\n            Re-distribute\n          </DemoButton>,\n          <DemoButton\n            key={1}\n            onClick={this.changeOrientation}\n            className=\"resultButton2\"\n          >\n            Change orientation\n          </DemoButton>,\n        ]}\n      >\n        <DemoCanvasWidget>\n          <CanvasWidget engine={this.props.engine} />\n        </DemoCanvasWidget>\n      </DemoWorkspaceWidget>\n    );\n  }\n}\n\n// ## Colors of nodes and links ##\n\nexport const colors: Record<string, string> = {\n  firstNode: 'rgb(128, 149, 255)',\n  jobsWithoutNeeds: 'rgb(128, 255, 234)',\n  jobs: 'rgb(170, 128, 255)',\n  doubleNeeds: '#FF0000',\n  cycle: '#c46415',\n};\nexport type workflow = any;\n\nfunction createFirstNodes(notNormalized: workflow, normalized: workflow) {\n  let node1 = new DefaultNodeModel({\n    name: notNormalized?.name ? String(notNormalized.name) : '',\n    color: colors.firstNode,\n  });\n\n  let port1: DefaultPortModel;\n  const helper = helperPortCreation(normalized, node1);\n  if (!Array.isArray(helper)) {\n    port1 = helper;\n  } else {\n    [port1, node1] = helper;\n  }\n  const node2 = new DefaultNodeModel({\n    name: 'jobs',\n    color: colors.jobsWithoutNeeds,\n  });\n  return [port1, node1, node2] as const;\n}\n\nfunction lockLinks(\n  link: DefaultLinkModel,\n  model: DiagramModel,\n  port2: DefaultPortModel[],\n  linksWithoutNeeds: DefaultLinkModel[],\n  linksBetweenJobs: Record<string, DefaultLinkModel[]>,\n) {\n  if (link !== undefined && port2[0] !== undefined) {\n    model.addAll(link);\n    link.setLocked(true);\n  }\n  model.addAll(...linksWithoutNeeds);\n  for (const link of linksWithoutNeeds) {\n    link.setLocked(true);\n  }\n  for (const key of Object.values(linksBetweenJobs)) {\n    for (let i = 0; i < key.length; i++) {\n      model.addAll(key[i]);\n      key[i].setLocked(true);\n    }\n  }\n}\n\nfunction colorCycles(\n  isNeededFor: Record<string, string[]>,\n  linksBetweenJobs: Record<string, DefaultLinkModel[]>,\n) {\n  const cycledJobs = checkCycles(isNeededFor);\n  for (const key in linksBetweenJobs) {\n    if (linksBetweenJobs[key].length > 1) {\n      for (const link of linksBetweenJobs[key]) {\n        link.setColor(colors.doubleNeeds);\n      }\n    }\n  }\n  if (cycledJobs[0] && Array.isArray(cycledJobs[1])) {\n    for (let i = 0; i < cycledJobs[1].length - 1; i++) {\n      const cycledKey = `${cycledJobs[1][i + 1]}${cycledJobs[1][i]}`;\n      if (linksBetweenJobs[cycledKey]) {\n        linksBetweenJobs[cycledKey][0].setColor(colors.cycle);\n      }\n    }\n  }\n}\nexport default function createDiagrams(\n  notNormalized: workflow,\n  normalized: workflow,\n  isNeededFor: Record<string, string[]>,\n) {\n  const [port1, node1, node2] = createFirstNodes(notNormalized, normalized);\n  // ## storing keys of jobs in normalized object ##\n  const key: string[] = Object.keys(normalized.jobs);\n\n  const portsOut: DefaultPortModel[] = [];\n  const [port2, numWithoutNeeds] = addPortsToJobNode(key, normalized, node2);\n  // displaying number of ports\n  for (\n    let withoutNeeds = 1;\n    withoutNeeds < numWithoutNeeds + 1;\n    ++withoutNeeds\n  ) {\n    portsOut.push(node2.addOutPort(withoutNeeds.toString()));\n  }\n  const [portsIn, portsOutWithNeeds, jobs] = specificPorts(\n    key,\n    normalized,\n    isNeededFor,\n  );\n  // ## creating nodes for jobs and object for reverse tracking our dependencies##\n\n  // ## adding specific ports to jobs ##\n\n  const model = new DiagramModel();\n  model.addAll(node1, node2, ...jobs);\n  let link: DefaultLinkModel;\n  if (port2[0] !== undefined) {\n    link = port1.link<DefaultLinkModel>(port2[0]);\n  } else {\n    link = port1.link<DefaultLinkModel>(port1);\n  }\n  const linksWithoutNeeds: DefaultLinkModel[] = [];\n  // ## loop used to add dependencies to our object (isNeededFor)\n  for (let job = 0; job < key.length; job++) {\n    for (let nod = 0; nod < key.length; nod++) {\n      if (normalized['jobs'][`${key[job]}`].needs) {\n        for (const element of normalized['jobs'][`${key[job]}`].needs) {\n          if (element === key[nod]) {\n            isNeededFor[`${key[nod]}`].push(`${key[job]}`);\n          }\n        }\n      }\n    }\n  }\n  const linksBetweenJobs = createLinksBetweenJobs(\n    normalized,\n    portsIn,\n    portsOut,\n    key,\n    portsOutWithNeeds,\n    node2,\n    linksWithoutNeeds,\n  );\n  lockLinks(link, model, port2, linksWithoutNeeds, linksBetweenJobs);\n  colorCycles(isNeededFor, linksBetweenJobs);\n  const engine = createEngine();\n  engine.setModel(model);\n  return <DemoWidget model={model} engine={engine} key={Math.random()} />;\n}\n","/* eslint-disable guard-for-in */\nimport {\n  DefaultNodeModel,\n  DefaultPortModel,\n} from '@projectstorm/react-diagrams';\ntype normalized = any;\ntype returned = any;\nexport function helperPortCreation(\n  normal: normalized,\n  node: DefaultNodeModel,\n): returned {\n  const ttt = Object.keys(normal['on']);\n  const tt = normal['on'];\n  const preventDuplicate: string[] = [];\n\n  const port: DefaultPortModel = node.addOutPort(`on: ${ttt} `);\n  if (typeof tt === 'object' || !Array.isArray(tt)) {\n    for (const properties in tt) {\n      if (tt[properties] !== null && Object.keys(tt[properties]).length !== 0) {\n        if (preventDuplicate.length === 0) {\n          node.addOutPort(`Branches: ${tt[properties]['branches']}`);\n          preventDuplicate.push(tt[properties]['branches']);\n        } else {\n          for (let i = 0; i < preventDuplicate.length; ++i) {\n            for (let j = 0; j < tt[properties]['branches'].length; ++j) {\n              if (preventDuplicate[i][i] === tt[properties]['branches'][j]) {\n                continue;\n              } else {\n                node.addOutPort(tt[properties]['branches'][j]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return [port, node];\n  }\n  return port;\n}\n","import {\n  DefaultNodeModel,\n  DefaultPortModel,\n} from '@projectstorm/react-diagrams';\n\nimport { workflow } from '../createDiagrams';\n\nexport function addPortsToJobNode(\n  key: string[],\n  normalized: workflow,\n  node2: DefaultNodeModel,\n) {\n  //variable storing number or jobs withour parameter \"needs\" - default value is 1, as the first job will never have parameter needs\n  let numWithoutNeeds = 1;\n  const port2: DefaultPortModel[] = [];\n  for (let i = 0; i < key.length; ++i) {\n    if (normalized) {\n      if (normalized.jobs[key[i]]['needs'] === undefined) {\n        //without needs\n        if (port2.length < 1) {\n          port2.push(node2.addInPort(`${key[i]}`));\n          continue;\n        }\n        node2.addInPort(`${key[i]}`);\n        numWithoutNeeds++;\n      }\n    }\n  }\n  return [port2, numWithoutNeeds] as const;\n}\n","/* eslint-disable guard-for-in */\nimport {\n  DefaultNodeModel,\n  DefaultPortModel,\n} from '@projectstorm/react-diagrams';\n\nimport { workflow, colors } from '../createDiagrams';\n\nexport function specificPorts(\n  key: string[],\n  normalized: workflow,\n  isNeededFor: Record<string, string[]>,\n) {\n  const portsOutWithNeeds: DefaultPortModel[] = [];\n  const portsIn: DefaultPortModel[] = [];\n  const jobs: DefaultNodeModel[] = [];\n  for (const jobName of key) {\n    jobs.push(\n      new DefaultNodeModel({\n        name: `${jobName}`,\n        color: colors.jobs,\n      }),\n    );\n    isNeededFor[`${jobName}`] = [];\n  }\n  for (let nodeNumber = 0; nodeNumber < key.length; ++nodeNumber) {\n    const keysJobs = normalized['jobs'][key[nodeNumber]];\n    if (keysJobs.needs) {\n      jobs[nodeNumber].addInPort(`${keysJobs.needs}`);\n    }\n    jobs[nodeNumber].addInPort(`runs-on: ${keysJobs['runs-on']}`);\n    if (keysJobs.if) {\n      jobs[nodeNumber].addInPort(`if: ${keysJobs.if}`);\n    }\n    //preventing additional output, that we dont want\n    let preventOutput = 0;\n    for (let step = 0; step < keysJobs.steps.length; ++step) {\n      for (const prop in keysJobs.steps[step]) {\n        if (preventOutput === 0) {\n          jobs[nodeNumber].addInPort('steps:');\n          portsIn.push(\n            jobs[nodeNumber].addInPort(\n              `${prop}: ${keysJobs.steps[step][prop]}`,\n            ),\n          );\n          // out port, just in case said job is needed by another job\n          portsOutWithNeeds.push(jobs[nodeNumber].addOutPort(''));\n          preventOutput++;\n          continue;\n        }\n        jobs[nodeNumber].addInPort(`${prop}: ${keysJobs.steps[step][prop]}`);\n      }\n    }\n  }\n  return [portsIn, portsOutWithNeeds, jobs] as const;\n}\n","import {\n  DefaultLinkModel,\n  DefaultNodeModel,\n  DefaultPortModel,\n} from '@projectstorm/react-diagrams';\n\nimport { workflow } from '../createDiagrams';\n\n// eslint-disable-next-line complexity\nexport function createLinksBetweenJobs(\n  normalized: workflow,\n  portsIn: DefaultPortModel[],\n  portsOut: DefaultPortModel[],\n  key: string[],\n  portsOutWithNeeds: DefaultPortModel[],\n  node2: DefaultNodeModel,\n  linksWithoutNeeds: DefaultLinkModel[],\n) {\n  const linksBetweenJobs: Record<string, DefaultLinkModel[]> = {};\n  for (let job = 0; job < portsIn.length; job++) {\n    if (normalized['jobs'][`${key[job]}`].needs) {\n      const needsOfJob = normalized['jobs'][`${key[job]}`].needs;\n      //connection of nodes with multiple \"needs\"\n      if (needsOfJob.length > 1) {\n        for (const element of needsOfJob) {\n          for (let jobName = 0; jobName < key.length; ++jobName) {\n            if (element === key[jobName]) {\n              const link1 = Object.values(\n                portsOutWithNeeds[jobName]['parent']['options'],\n              )[2];\n              const link2 = Object.values(portsIn[job]['parent']['options'])[2];\n              if (!linksBetweenJobs[`${link1}${link2}`]) {\n                linksBetweenJobs[`${link1}${link2}`] = [];\n              }\n              linksBetweenJobs[`${link1}${link2}`].push(\n                portsOutWithNeeds[jobName].link<DefaultLinkModel>(portsIn[job]),\n              );\n            }\n          }\n        }\n      } else {\n        for (let jobName = 0; jobName < key.length; ++jobName) {\n          if (needsOfJob[0] === key[jobName]) {\n            const link1 = Object.values(\n              portsOutWithNeeds[jobName]['parent']['options'],\n            )[2];\n            const link2 = Object.values(portsIn[job]['parent']['options'])[2];\n            if (!linksBetweenJobs[`${link1}${link2}`]) {\n              linksBetweenJobs[`${link1}${link2}`] = [];\n            }\n\n            linksBetweenJobs[`${link1}${link2}`].push(\n              portsOutWithNeeds[jobName].link<DefaultLinkModel>(portsIn[job]),\n            );\n          }\n        }\n      }\n    } else {\n      //handle independent jobs\n      const portsOut2: DefaultPortModel[] = [];\n      for (\n        let withoutNeeds = 0;\n        withoutNeeds < node2['portsIn'].length;\n        withoutNeeds++\n      ) {\n        if (node2['portsIn'][withoutNeeds]['options'].label === key[job]) {\n          portsOut2.push(portsOut[withoutNeeds]);\n          linksWithoutNeeds.push(\n            portsOut2[0].link<DefaultLinkModel>(portsIn[job]),\n          );\n        }\n      }\n    }\n  }\n  return linksBetweenJobs;\n}\n","import { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport createEngine, {\n  DiagramModel,\n  DefaultNodeModel,\n} from '@projectstorm/react-diagrams';\nimport React from 'react';\n\nimport { normalizeMatrix } from '../additionalFunctions/normalization';\nimport { DemoCanvasWidget } from '../diagrams/CanvasWidget';\n\nexport default function matrixHandler(normalized: Record<string, any>) {\n  if (normalized !== undefined) {\n    const key: string[] = Object.keys(normalized.jobs);\n    const matrixes: DefaultNodeModel[] = [];\n    for (const jobName of key) {\n      if (normalized.jobs[`${jobName}`]?.strategy?.matrix) {\n        const combinations = normalizeMatrix(\n          normalized.jobs[`${jobName}`]?.strategy?.matrix,\n        );\n        matrixes.push(\n          new DefaultNodeModel({\n            name: `${jobName} matrix`,\n            color: 'rgb(219, 112, 147)',\n          }),\n        );\n        for (const combination of combinations) {\n          const entry = Object.entries(combination);\n          const por: string[] = [];\n          for (let i = 0; i < entry.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n            por.push(` ${entry[i][0]} - ${entry[i][1]}`);\n          }\n          // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n          matrixes[matrixes.length - 1].addInPort(`[ ${por} ]`);\n        }\n      }\n    }\n    if (matrixes.length > 0) {\n      const engine = createEngine();\n      const model = new DiagramModel();\n      model.addAll(...matrixes);\n      engine.setModel(model);\n      return (\n        <DemoCanvasWidget>\n          <CanvasWidget engine={engine} />\n        </DemoCanvasWidget>\n      );\n    }\n  }\n  return '';\n}\n","import jsyaml from 'js-yaml';\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/mode/yaml/yaml';\nimport { Controlled } from 'react-codemirror2';\nimport 'codemirror/addon/lint/yaml-lint';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/hint/anyword-hint';\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/display/placeholder';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/lint/lint';\nimport 'codemirror/addon/fold/foldcode.js';\nimport 'codemirror/addon/fold/foldgutter.js';\nimport 'codemirror/addon/fold/indent-fold.js';\nimport 'codemirror/addon/scroll/annotatescrollbar.js';\nimport 'codemirror/addon/scroll/simplescrollbars.css';\nimport 'codemirror/addon/scroll/simplescrollbars.js';\n\ntype props = any;\nexport default function Editor(props: props): JSX.Element {\n  const { value, onChange } = props;\n  window.jsyaml = jsyaml;\n\n  function handleChange(editor: unknown, data: unknown, value: string) {\n    onChange(value);\n  }\n  return (\n    <>\n      <div className=\"container\">\n        <Controlled\n          onBeforeChange={handleChange}\n          value={value}\n          className=\"editor-wrapper\"\n          options={{\n            linewrapping: true,\n            lint: true,\n            mode: 'text/x-yaml',\n            placeholder: 'Please enter Your worklow here.',\n            indentWithTabs: false,\n            smartIndent: true,\n            tabSize: 2,\n            scrollbarStyle: 'overlay',\n            lintGutter: true,\n            foldGutter: true,\n            gutters: [\n              'CodeMirror-linenumbers',\n              'CodeMirror-foldgutter',\n              'CodeMirror-lint-markers',\n            ],\n            theme: 'monokai',\n            lineNumbers: true,\n            extraKeys: { 'Ctrl-Space': 'autocomplete' },\n          }}\n        />\n      </div>\n    </>\n  );\n}\n","/* eslint-disable complexity */\nimport jsyaml from 'js-yaml';\nimport React, { useState, useEffect } from 'react';\nimport Popup from 'reactjs-popup';\n\nimport allJobsNeeds from '../additionalFunctions/allNeededJobs';\nimport { ajv } from '../additionalFunctions/createAjvObject';\nimport displayError from '../additionalFunctions/displayError';\nimport { LinksToActions } from '../additionalFunctions/linksToActions';\nimport dependencyObject from '../additionalFunctions/neededFor';\nimport { normalize } from '../additionalFunctions/normalization';\nimport createDiagram from '../diagrams/createDiagrams';\nimport matrixHandler from '../diagrams/matrixHandling';\nimport {\n  selfLink,\n  allNeeds,\n  checkCycles,\n  sameNeeds,\n} from '../diagrams/selfLink';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport schema from '../schema/Schema.json';\nimport Editor from './Editor';\nimport 'reactjs-popup/dist/index.css';\n\ntype parsedYaml = any;\n\nfunction App(): JSX.Element {\n  let workflow: parsedYaml;\n  let normalizedObject: parsedYaml;\n  const [yaml, setYaml] = useLocalStorage('yaml', '');\n  const [click, setClick] = useState({ editor: true, result: true });\n  const man = yaml;\n\n  function parseYamltoJSON(text: string): parsedYaml {\n    let doc;\n    // Parsing string to JSON\n    try {\n      doc = jsyaml.load(text);\n    } catch (e) {\n      const error = `${e.reason} on line ${e.mark.line}`;\n      return error;\n    }\n    return doc;\n  }\n  // Check, whether provided json is valid against json Schema (if correct returning boolean, if not returning object of errors)\n  function validate(data: parsedYaml) {\n    if (typeof data === 'string') {\n      return false;\n    }\n    const validate = ajv.compile(schema);\n    const valid = validate(data);\n    if (!valid) {\n      const errors: parsedYaml = validate.errors;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return errors;\n    }\n    return valid;\n  }\n  workflow = parseYamltoJSON(man);\n\n  function handleClick() {\n    if (click.result) {\n      setClick({ result: false, editor: true });\n    } else {\n      setClick({ result: true, editor: false });\n    }\n  }\n  function showBoth() {\n    setClick({ result: true, editor: true });\n  }\n  try {\n    normalizedObject = normalize(workflow);\n  } catch (e) {\n    // error\n  }\n  if (typeof workflow !== 'object') {\n    //creating a seperate object\n    workflow = undefined;\n  }\n  // Storing a boolean or an error object\n  const storeValidationResult = validate(workflow);\n  let isNeededFor: Record<string, string[]> = {};\n  isNeededFor = dependencyObject(workflow, normalizedObject, isNeededFor);\n  const allNeedsFromJobs: boolean = allJobsNeeds(normalizedObject, isNeededFor);\n  const [renderedDiagram, setRenderedDiagram] = useState<React.ReactNode>(null);\n\n  useEffect(() => {\n    if (normalizedObject === undefined || displayError(storeValidationResult)) {\n      setRenderedDiagram(null);\n      return;\n    }\n    const timerId = setTimeout(() => {\n      setRenderedDiagram(\n        createDiagram(workflow, normalizedObject, isNeededFor),\n      );\n    }, 500);\n    return () => {\n      clearTimeout(timerId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [yaml]);\n  const isError = displayError(storeValidationResult);\n  return (\n    <>\n      <div className=\"grid\">\n        <div className=\"buttonsWrapper\">\n          <button className=\"PRESSME\" onClick={handleClick}>\n            {click.editor && click.result\n              ? 'Expand Editor'\n              : click.editor && !click.result\n              ? 'Show Diagrams'\n              : 'Show Editor'}\n          </button>\n          {!click.result || !click.editor ? (\n            <button className=\"PRESSME\" onClick={showBoth}>\n              {' '}\n              Show editor and diagrams\n            </button>\n          ) : (\n            ''\n          )}\n\n          {matrixHandler(normalizedObject) && click.result ? (\n            <Popup\n              trigger={<button className=\"PRESSME\">Display Matrix</button>}\n              position=\"bottom center\"\n            >\n              <div className=\"matrix\">{matrixHandler(normalizedObject)}</div>\n            </Popup>\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className={`result ${\n            click.editor && click.result\n              ? 'normal'\n              : !click.editor && click.result\n              ? 'bigger'\n              : 'smaller'\n          }`}\n        >\n          {renderedDiagram}\n        </div>\n        <div\n          className={`text-editor ${\n            click.editor && click.result\n              ? 'normal'\n              : click.editor && !click.result\n              ? 'bigger'\n              : 'smaller'\n          } `}\n        >\n          <Editor value={yaml} onChange={setYaml} press={click} />\n        </div>\n      </div>\n      <div className=\"checkValid\"> {isError}</div>\n      <span />\n      {click.result && !isError && (\n        <>\n          {normalizedObject && (\n            <div className=\"links\">\n              <span>Actions used in workflow:</span>\n              {LinksToActions(normalizedObject)}{' '}\n            </div>\n          )}\n          {selfLink(isNeededFor) && (\n            <div className=\"selfLink\">\n              Self link detected (job is dependent on itself)! Please check\n              provided YAML!\n            </div>\n          )}\n          {allNeeds(isNeededFor, normalizedObject) && (\n            <div className=\"allNeeds\">\n              Every job is dependent on another job, workflow will never\n              complete! Please check provided YAML!\n            </div>\n          )}\n          {checkCycles(isNeededFor)[0] && (\n            <div className=\"cycles\">\n              Cycle detected! Part of the provided workflow will never execute!\n              Please check provided YAML!\n            </div>\n          )}\n          {sameNeeds(isNeededFor) && (\n            <div className=\"allNeeds\">\n              One or more of provided jobs, has duplicate of the same job\n              needed! Please check provided YAML!\n            </div>\n          )}\n          {allNeedsFromJobs && (\n            <div className=\"jobDoesntExist\">\n              Job passed in need does not exists! Please check provided YAML!\n            </div>\n          )}\n        </>\n      )}\n    </>\n  );\n}\nexport default App;\n","import { useEffect, useState } from 'react';\n//used to differentiate variables from this project\nconst PREFIX = 'gui-';\n\ntype initValue = any;\ntype returned = any | any[];\nexport default function useLocalStorage(\n  key: string,\n  initialValue: initValue,\n): returned {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    //if we have a value in local storage, we return it\n    if (jsonValue) {\n      return JSON.parse(jsonValue);\n    }\n    //if not we want to use initial value\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    }\n    return initialValue;\n  });\n  //saving value to local storage at specfied key\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}\n","import React from 'react';\n\nexport default function dependencyObject(\n  notNormalized: any,\n  normalized: any,\n  isNeededFor: Record<string, string[]>,\n) {\n  if (normalized) {\n    const key: string[] = Object.keys(normalized.jobs);\n    for (const jobName of key) {\n      isNeededFor[`${jobName}`] = [];\n    }\n    // ## loop used to add dependencies to our object (isNeededFor)\n    for (let job = 0; job < key.length; job++) {\n      for (let nod = 0; nod < key.length; nod++) {\n        if (normalized['jobs'][`${key[job]}`].needs) {\n          for (const element of normalized['jobs'][`${key[job]}`].needs) {\n            if (element === key[nod]) {\n              isNeededFor[`${key[nod]}`].push(`${key[job]}`);\n            }\n          }\n        }\n      }\n    }\n    return isNeededFor;\n  }\n  return isNeededFor;\n}\n","import React from 'react';\n\ntype workflow = any;\nexport default function allJobsNeeds(\n  normalized: workflow,\n  isNeededFor: Record<string, string[]>,\n) {\n  if (normalized) {\n    const key: string[] = Object.keys(normalized.jobs);\n    const allJobs: string[] = [];\n    // ## loop used to add dependencies to our object (isNeededFor)\n    for (let job = 0; job < key.length; job++) {\n      if (normalized['jobs'][`${key[job]}`].needs) {\n        for (const element of normalized['jobs'][`${key[job]}`].needs) {\n          if (!Object.keys(isNeededFor).includes(element)) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }\n  return false;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}